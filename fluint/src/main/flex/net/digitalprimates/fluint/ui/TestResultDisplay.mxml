<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns="*" 
   xmlns:mx="http://www.adobe.com/2006/mxml" 
   xmlns:dp="http://www.digitalprimates.net/2008/fluint" 
   paddingLeft="10" 
   paddingRight="10" 
   paddingTop="10">
   
	<mx:Script>
		<![CDATA[
		   import mx.events.FlexEvent;
			import mx.collections.ArrayCollection;
			import net.digitalprimates.fluint.monitor.TestCaseResult;
			import net.digitalprimates.fluint.monitor.TestSuiteResult;
			import net.digitalprimates.fluint.events.ChooseTestMethodResultEvent;
			import net.digitalprimates.fluint.monitor.TestMethodResult;
			import net.digitalprimates.fluint.monitor.TestMonitor;
			import net.digitalprimates.fluint.ui.ErrorTreeItemRenderer;
			
	        protected var _testMonitor:TestMonitor;
	
			[Bindable('testMonitorChanged')]
	        public function get testMonitor():TestMonitor {
	        	return _testMonitor;
	        }
	        
	        public function set testMonitor( value:TestMonitor ):void {
	        	_testMonitor = value; 
	        	dispatchEvent( new Event( 'testMonitorChanged' ) );
	        }
			
			protected function displayTraceInformation( selectedItem:Object ):String {
				var displayString : String = selectedItem.traceInformation;
				
				if ( selectedItem is TestCaseResult ) {
					return displayString;
				} 
				
				if(selectedItem.metadata && selectedItem.metadata.arg)
				{
				   for each(var arg : XML in selectedItem.metadata.arg)
				   {
				      displayString += "\n" + arg.@key + ': ' + arg.@value;
					}
				}
				
				return displayString;
			} 
			
			protected function handleTestMethodResultSelection( event:ChooseTestMethodResultEvent ):void {
				
				var collection:ArrayCollection = testMonitor.testSuiteCollection;

            for each(var testSuiteResult : TestSuiteResult in testMonitor.testSuiteCollection)
            {
               for each(var testCaseResult : TestCaseResult in testSuiteResult.children)
               {
                  for each(var testMethodResult : TestMethodResult in testCaseResult.children)
                  {
							if ( event.testMethodResult == testMethodResult ) {
								testTree.expandItem( testSuiteResult, true, false, false );
								testTree.expandItem( testCaseResult, true, false, false );
								testTree.selectedItem = event.testMethodResult;
								break;
							}
						}					
					}			
				}			
			}
			
			protected function applyFilter( event:Event ):void {
			   
			   var filterFunction : Function = null;
			   
				switch ( testFilterGroup.selectedValue ) {
					case 'all': {
						break;
					}

					case 'pass': {
						filterFunction = function(item : Object) : Boolean {
						   return item.status;
						};
						break;
					}

					case 'fail': {
						filterFunction = function(item : Object) : Boolean {
						   return !item.status;
						};
						break;
					}
				}
			
				for each(var suiteResult : TestSuiteResult in testMonitor.testSuiteCollection)
			{
 			      suiteResult.children.filterFunction = filterFunction;
 				   suiteResult.children.refresh();
					}
			}
		]]>
	</mx:Script>
	
	<mx:Label text="Unit and Integration Test Environment"/>
	
	<dp:TestResultStatusBar
	   width="100%"
	   horizontalGap="0" 
	   total="{testMonitor.totalTestCount}"
	   fails="{testMonitor.totalFailureCount}" 
	   errors="{testMonitor.totalErrorCount}" />
	   
	<dp:TestProgressBar width="100%" height="50" 
			dataProvider="{testMonitor.testSuiteCollection}" 
			numberTestCases="{testMonitor.totalTestCount}"
			chooseTestMethodResult="handleTestMethodResultSelection( event )"/>
	
	<mx:HRule width="100%"/>
	
	<mx:HDividedBox width="100%" height="100%">
		<mx:VBox width="100%" height="100%">
			<mx:Label text="Test Suites"/>
			<mx:Tree id="testTree" 
			   width="100%" 
			   height="100%" 
			   dataProvider="{testMonitor.testSuiteCollection}" 
			   itemRenderer="net.digitalprimates.fluint.ui.ErrorTreeItemRenderer" />
			   
			<mx:Label text="Test Result Filter"/>
			<mx:HBox width="100%">
				<mx:RadioButtonGroup id="testFilterGroup" change="applyFilter(event)"/>
				<mx:RadioButton id="all" label="All Tests" selected="true" value="all" groupName="testFilterGroup"/>
				<mx:RadioButton id="pass" label="Only Pass" value="pass" groupName="testFilterGroup"/>
				<mx:RadioButton id="fail" label="Only Failure" value="fail" groupName="testFilterGroup"/>
			</mx:HBox>
		</mx:VBox>
	
		<mx:VBox width="100%" height="100%">
			<mx:Label text="Stack Trace"/>
			<mx:TextArea width="100%" 
			   height="100%" 
			   borderStyle="none" 
			   wordWrap="false" 
			   text="{displayTraceInformation(testTree.selectedItem)}" />
		</mx:VBox>
	</mx:HDividedBox>
</mx:VBox>